{"version":3,"sources":["assets/icons/rotate.svg","constants/constants.ts","assets/icons/repeat-audio.svg","app/components/CardsPage/CardsPage.tsx","app/components/MainPage/MainPage.tsx","app/components/NavMenu/NavMenu.tsx","app/components/Shared/Button/Button.tsx","app/components/Statistics/Statistics.tsx","app/components/Switcher/Switcher.tsx","app/App.tsx","index.tsx"],"names":["_g","NAV_MENU_ROUTES","ROUT_INDEX","APP_MODE","GAME_STATUS","STATISTICS_DATA","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgRotate","_ref","svgRef","title","titleId","props","id","xmlns","xmlnsXlink","width","height","viewBox","ref","d","stroke","fill","fillRule","_path","_path2","_path3","_path4","ForwardRef","SvgRepeatAudio","DEFAULT_CARDS_PAGE_STATE","cardsArray","isFlippedCards","isDisabledCards","rating","gameStatus","CardsPage","audio","Audio","gameAudioList","guessedCardIndex","getCardsInfo","category","a","fetch","response","json","cards","setState","resetCardsStyles","state","Array","createCards","gameMode","map","card","index","className","onMouseLeave","resetFlippedCard","role","onClick","playAudio","audioSrc","handleChosenCard","style","backgroundImage","image","word","translation","flipCard","type","src","currentTime","play","setIsFlippedCardState","status","newIsFlippedCards","changeCardStatisticsProperty","startGame","resetGame","createRandomAudioList","sort","Math","random","endGame","onFinishGame","includes","setTimeout","repeatCardAudio","handleCorrectChoise","handleErrorChoise","nextCardIndex","addRatingPoint","disableCard","currentAudioSrc","currentCard","find","currentCardIndex","newRating","push","newIsDisabledCards","property","statistics","onChangeStatisticsData","newStatictics","rightGuessed","errors","trainings","returnRepeatBtn","returnStartGameBtn","returnRatingBar","ratingPoint","prevProps","alt","filter","e","Component","MainPage","getCategoriesInfo","categories","onClickCategoryCard","href","name","NavMenu","activeRout","isHiddenNavMenu","navItems","route","onClickNavItem","onClickPageCover","Button","children","StatisticsPage","getCardGuessedPercent","round","margin","entries","indexCategory","indexItem","flat","Switcher","htmlFor","DEFAULT_STATISTICS","percentGuessed","App","getCardsData","defaultStatistics","fromEntries","value","toggleNavMenu","setActiveRoute","activeRoute","changeAppMode","updateStatistics","newStatistics","getPage","default","rel","ReactDOM","render","document","body","querySelector"],"mappings":"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","file":"static/js/main.43871858.chunk.js","sourcesContent":["var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRotate(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"svg\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 400,\n    height: 400,\n    viewBox: \"0, 0, 400,400\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"svgg\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path0\",\n    d: \"M149.333 106.849 C -33.313 127.384,-41.223 252.474,138.667 275.531 C 146.978 276.596,157.155 277.883,161.284 278.391 L 168.790 279.314 169.284 303.117 L 169.778 326.920 214.222 292.359 C 238.667 273.351,258.667 256.989,258.667 256.000 C 258.667 255.011,238.667 238.649,214.222 219.641 L 169.778 185.080 169.280 208.294 L 168.783 231.508 158.614 230.340 C 114.170 225.237,73.024 211.579,59.659 197.495 L 54.430 191.983 60.245 185.983 C 103.148 141.719,300.841 141.956,339.792 186.318 L 345.150 192.421 340.131 197.714 C 334.182 203.985,316.718 213.058,300.000 218.562 L 288.000 222.512 288.000 246.565 L 288.000 270.618 294.624 269.375 C 380.118 253.336,418.057 192.558,369.823 148.909 C 332.872 115.470,236.377 97.063,149.333 106.849 \",\n    stroke: \"none\",\n    fill: \"#00000080\",\n    fillRule: \"evenodd\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRotate);\nexport default __webpack_public_path__ + \"static/media/rotate.38bffe72.svg\";\nexport { ForwardRef as ReactComponent };","// TODO: do not this constants for categories, use async fetch.json\n// TODO: replace this routing with react router\nexport const NAV_MENU_ROUTES: string[] = [\n  'Main Page',\n  'Action (set A)',\n  'Action (set B)',\n  'Animal (set A)',\n  'Animal (set B)',\n  'Clothes',\n  'Emotions',\n  'Statistics',\n];\n\nexport const ROUT_INDEX = {\n  mainPage: 0,\n  аctionSetA: 1,\n  actionSetB: 2,\n  animalSetA: 3,\n  animalSetB: 4,\n  clothes: 5,\n  emotions: 6,\n  statistics: 7,\n};\n\nexport const APP_MODE = {\n  train: 'train',\n  play: 'play',\n};\n\nexport const GAME_STATUS = {\n  notRunning: 'notRunning',\n  running: 'running',\n  finished: 'finished',\n};\n\nexport const STATISTICS_DATA = {\n  rightGuessed: 'rightGuessed',\n  errors: 'errors',\n  trainings: 'trainings',\n};\n\nexport const correctAudioUrl = 'audio/sounds/correct.mp3';\nexport const errorAudioUrl = 'audio/sounds/error.mp3';\nexport const successAudioUrl = 'audio/sounds/success.mp3';\nexport const failureAudioUrl = 'audio/sounds/failure.mp3';\nexport const goldStarIconUrl = 'icons/star-win.svg';\nexport const emptyStarIconUrl = 'icons/star.svg';\nexport const successImageUrl = 'img/other/success.jpg';\nexport const failureImageUrl = 'img/other/failure.jpg';\n","var _path, _path2, _path3, _path4;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRepeatAudio(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 50,\n    height: 50,\n    viewBox: \"0 0 50 50\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.9996 43.9222C24.6878 43.922 24.3873 43.8052 24.1571 43.5947L12.0146 32.4997H7.32715C6.99563 32.4997 6.67769 32.368 6.44326 32.1336C6.20884 31.8992 6.07715 31.5812 6.07715 31.2497V18.7497C6.07715 18.4182 6.20884 18.1002 6.44326 17.8658C6.67769 17.6314 6.99563 17.4997 7.32715 17.4997H12.0146L24.1571 6.40471C24.3361 6.24142 24.5587 6.13365 24.7978 6.09453C25.0369 6.05541 25.2822 6.08661 25.5039 6.18435C25.7256 6.28208 25.9141 6.44213 26.0465 6.64503C26.1789 6.84793 26.2495 7.08494 26.2496 7.32721V42.6722C26.2496 43.0037 26.1179 43.3217 25.8835 43.5561C25.6491 43.7905 25.3312 43.9222 24.9996 43.9222V43.9222ZM8.57715 29.9997H12.4996C12.8115 30 13.112 30.1168 13.3421 30.3272L23.7496 39.8272V10.1622L13.3421 19.6622C13.1135 19.8763 12.8128 19.9967 12.4996 19.9997H8.57715V29.9997Z\",\n    fill: \"#574C4C\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.8508 30.6327C29.6038 30.6327 29.3623 30.5594 29.1569 30.4222C28.9514 30.285 28.7912 30.09 28.6965 29.8618C28.6019 29.6337 28.5769 29.3826 28.6248 29.1402C28.6727 28.8979 28.7914 28.6752 28.9658 28.5002C29.8928 27.5713 30.4134 26.3125 30.4134 25.0002C30.4134 23.6879 29.8928 22.4292 28.9658 21.5002C28.7381 21.2645 28.6121 20.9487 28.615 20.621C28.6178 20.2932 28.7493 19.9797 28.981 19.748C29.2128 19.5162 29.5263 19.3847 29.8541 19.3819C30.1818 19.379 30.4975 19.505 30.7333 19.7327C32.1283 21.1308 32.9118 23.0252 32.9118 25.0002C32.9118 26.9753 32.1283 28.8696 30.7333 30.2677C30.499 30.5014 30.1817 30.6326 29.8508 30.6327V30.6327Z\",\n    fill: \"#574C4C\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.27 35.0522C34.0225 35.0527 33.7804 34.9796 33.5744 34.8423C33.3684 34.7049 33.2079 34.5096 33.1131 34.2809C33.0183 34.0522 32.9935 33.8005 33.0419 33.5577C33.0903 33.315 33.2098 33.092 33.385 32.9172C34.425 31.8776 35.25 30.6433 35.8128 29.2848C36.3757 27.9263 36.6654 26.4702 36.6654 24.9997C36.6654 23.5292 36.3757 22.0731 35.8128 20.7146C35.25 19.3561 34.425 18.1218 33.385 17.0822C33.2656 16.9669 33.1704 16.829 33.1049 16.6765C33.0394 16.524 33.0049 16.3599 33.0035 16.194C33.002 16.028 33.0337 15.8634 33.0965 15.7098C33.1594 15.5562 33.2522 15.4166 33.3695 15.2992C33.4869 15.1819 33.6265 15.089 33.7801 15.0262C33.9337 14.9633 34.0983 14.9317 34.2643 14.9332C34.4302 14.9346 34.5943 14.9691 34.7468 15.0346C34.8993 15.1001 35.0372 15.1953 35.1525 15.3147C36.4246 16.5865 37.4336 18.0963 38.1221 19.7581C38.8105 21.4199 39.1648 23.201 39.1648 24.9997C39.1648 26.7984 38.8105 28.5796 38.1221 30.2413C37.4336 31.9031 36.4246 33.413 35.1525 34.6847C34.9187 34.9193 34.6013 35.0515 34.27 35.0522Z\",\n    fill: \"#574C4C\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M38.0005 38.7828C37.7535 38.7827 37.512 38.7095 37.3065 38.5723C37.1011 38.4351 36.9409 38.2401 36.8462 38.0119C36.7515 37.7837 36.7266 37.5326 36.7745 37.2903C36.8224 37.0479 36.9411 36.8252 37.1155 36.6503C40.2048 33.5603 41.9403 29.3697 41.9403 25.0003C41.9403 20.6308 40.2048 16.4403 37.1155 13.3503C36.9961 13.235 36.9009 13.097 36.8354 12.9445C36.7699 12.792 36.7354 12.628 36.7339 12.462C36.7325 12.2961 36.7641 12.1315 36.827 11.9778C36.8898 11.8242 36.9826 11.6847 37.1 11.5673C37.2174 11.4499 37.3569 11.3571 37.5106 11.2943C37.6642 11.2314 37.8288 11.1998 37.9948 11.2012C38.1607 11.2027 38.3248 11.2371 38.4773 11.3027C38.6298 11.3682 38.7677 11.4634 38.883 11.5828C40.645 13.3448 42.0428 15.4366 42.9964 17.7388C43.95 20.0409 44.4408 22.5084 44.4408 25.0003C44.4408 27.4921 43.95 29.9596 42.9964 32.2618C42.0428 34.564 40.645 36.6558 38.883 38.4178C38.6487 38.6514 38.3314 38.7827 38.0005 38.7828Z\",\n    fill: \"#574C4C\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRepeatAudio);\nexport default __webpack_public_path__ + \"static/media/repeat-audio.8a3e2462.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Component } from 'react';\nimport './CardsPage.css';\nimport { ReactComponent as RotateSVG } from '../../../assets/icons/rotate.svg';\nimport { ReactComponent as RepeatSVG } from '../../../assets/icons/repeat-audio.svg';\nimport {\n  STATISTICS_DATA,\n  APP_MODE,\n  failureAudioUrl,\n  successAudioUrl,\n  correctAudioUrl,\n  errorAudioUrl,\n  goldStarIconUrl,\n  emptyStarIconUrl,\n  GAME_STATUS,\n  failureImageUrl, successImageUrl,\n} from '../../../constants/constants.ts';\n\ninterface CardInterface {\n  word: string;\n  translation: string;\n  image: string;\n  audioSrc: string;\n}\n\n// ! Dubbled interface from App, can't add interface to constants, (expansion problem)\ninterface CardStatisticsInterface {\n  category: string;\n  word: string;\n  translation: string;\n  trainings: number;\n  errors: number;\n  rightGuessed: number;\n  percentGuessed: number;\n}\n\ninterface CardsPageProps {\n  category: string;\n  gameMode: string;\n  onFinishGame(): void;\n  /* eslint-disable no-unused-vars */\n  onChangeStatisticsData: (statistics: { [key: string]: CardStatisticsInterface[] }) => void;\n  /* eslint-disable no-unused-vars */\n  statistics: { [key: string]: CardStatisticsInterface[] }\n}\n\ninterface CardsPageState {\n  cardsArray: CardInterface[];\n  isFlippedCards: boolean[];\n  isDisabledCards: boolean[];\n  rating: boolean[];\n  gameStatus: string;\n}\n\nconst DEFAULT_CARDS_PAGE_STATE: CardsPageState = {\n  cardsArray: [],\n  isFlippedCards: [],\n  isDisabledCards: [],\n  rating: [],\n  gameStatus: GAME_STATUS.notRunning,\n};\n\nclass CardsPage extends Component<CardsPageProps, CardsPageState> {\n  audio = new Audio();\n\n  gameAudioList: string[] = [];\n\n  guessedCardIndex = 0;\n\n  constructor(props: CardsPageProps) {\n    super(props);\n    this.state = DEFAULT_CARDS_PAGE_STATE;\n  }\n\n  componentDidMount(): void {\n    const { category } = this.props;\n    this.getCardsInfo(category);\n    this.resetCardsStyles();\n  }\n\n  componentDidUpdate(prevProps: CardsPageProps): void {\n    const { category, gameMode } = this.props;\n    if (prevProps.category !== category) {\n      this.resetGame();\n      this.getCardsInfo(category);\n      this.resetCardsStyles();\n    }\n    if (prevProps.gameMode === APP_MODE.play && gameMode === APP_MODE.train) {\n      this.resetGame();\n      this.resetCardsStyles();\n    }\n  }\n\n  getCardsInfo = async (category: string): Promise<void> => {\n    const response = await fetch('./cards.json');\n    const cards = await response.json();\n    const cardsArray = await cards[1][category];\n    this.setState({ cardsArray });\n  }\n\n  resetCardsStyles = (): void => {\n    const { cardsArray } = this.state;\n    this.setState({\n      isFlippedCards: new Array(cardsArray.length).fill(false),\n      isDisabledCards: new Array(cardsArray.length).fill(false),\n    });\n  }\n\n  createCards = (cardsArray: CardInterface[]): JSX.Element[] => {\n    const { isFlippedCards, isDisabledCards } = this.state;\n    const { gameMode } = this.props;\n    return (cardsArray).map((card: CardInterface, index: number): JSX.Element => (\n      <div\n        key={card.word}\n        className=\"cards-page__card-container card-container\"\n        onMouseLeave={() => (\n          gameMode === APP_MODE.train\n            ? this.resetFlippedCard(index)\n            : '')}\n        role=\"none\"\n      >\n        <div\n          className={\n            `cards-page__card card \n            ${isFlippedCards[index] ? 'flipped' : ''} \n            ${isDisabledCards[index] ? 'disabled' : ''} \n            ${gameMode === APP_MODE.play ? 'play-mode' : ''}`\n          }\n          role=\"none\"\n        >\n          <div\n            className=\"cards-page__card-front card-front\"\n            onClick={() => (\n              gameMode === APP_MODE.train\n                ? this.playAudio(card.audioSrc)\n                : this.handleChosenCard(index))}\n            role=\"none\"\n          >\n            <div\n              className=\"cards-page__image\"\n              style={{ backgroundImage: `url(${card.image})` }}\n            />\n            <div className=\"cards-page__card-text card-text\">{card.word}</div>\n          </div>\n          <div className=\"cards-page__card-back card-back\">\n            <div\n              className=\"cards-page__image\"\n              style={{ backgroundImage: `url(${card.image})` }}\n            />\n            <div className=\"cards-page__card-text card-text\">{card.translation}</div>\n          </div>\n          <button\n            className=\"cards-page__rotate-btn\"\n            onClick={() => (\n              gameMode === APP_MODE.train\n                ? this.flipCard(index)\n                : '')}\n            type=\"button\"\n            aria-label=\"Show Translation\"\n          >\n            <RotateSVG />\n          </button>\n        </div>\n      </div>\n    ));\n  }\n\n  playAudio = (src: string): void => {\n    this.audio.currentTime = 0;\n    this.audio.src = src;\n    this.audio.play();\n  }\n\n  // TODO: split this functions to separate service files\n  setIsFlippedCardState = (index: number, status: boolean): void => {\n    const { isFlippedCards } = this.state;\n    const newIsFlippedCards = isFlippedCards;\n    newIsFlippedCards[index] = status;\n    this.setState({ isFlippedCards: newIsFlippedCards });\n  }\n\n  flipCard = (index: number): void => {\n    this.setIsFlippedCardState(index, true);\n    this.changeCardStatisticsProperty(index, STATISTICS_DATA.trainings);\n  }\n\n  resetFlippedCard = (index: number): void => {\n    this.setIsFlippedCardState(index, false);\n  }\n\n  startGame = (): void => {\n    this.resetGame();\n    this.setState({ gameStatus: GAME_STATUS.running });\n    this.createRandomAudioList();\n    this.playAudio(this.gameAudioList[this.guessedCardIndex]);\n  }\n\n  createRandomAudioList = (): void => {\n    const { cardsArray } = this.state;\n    const gameAudioList = cardsArray.map((card) => card.audioSrc);\n    this.gameAudioList = gameAudioList.sort((): number => 0.5 - Math.random());\n  }\n\n  resetGame = (): void => {\n    this.setState({ gameStatus: GAME_STATUS.notRunning, rating: [] });\n    this.guessedCardIndex = 0;\n    this.gameAudioList = [];\n  }\n\n  endGame = (): void => {\n    const { rating } = this.state;\n    const { onFinishGame } = this.props;\n    if (rating.includes(false)) {\n      setTimeout(() => {\n        this.playAudio(failureAudioUrl);\n      }, 1500);\n    } else {\n      setTimeout(() => {\n        this.playAudio(successAudioUrl);\n      }, 1500);\n    }\n    setTimeout(() => {\n      this.setState({ gameStatus: GAME_STATUS.finished });\n    }, 500);\n    setTimeout(() => {\n      onFinishGame();\n    }, 5000);\n  }\n\n  repeatCardAudio = (): void => {\n    this.playAudio(this.gameAudioList[this.guessedCardIndex]);\n  }\n\n  handleChosenCard = (index: number): void => {\n    const { cardsArray, gameStatus, isDisabledCards } = this.state;\n    if (gameStatus === GAME_STATUS.running && !isDisabledCards[index]) {\n      if (cardsArray[index].audioSrc === this.gameAudioList[this.guessedCardIndex]) {\n        this.handleCorrectChoise(index);\n      } else {\n        this.handleErrorChoise();\n      }\n    }\n  }\n\n  handleCorrectChoise = (index: number): void => {\n    const { cardsArray } = this.state;\n    const nextCardIndex = this.guessedCardIndex + 1;\n    this.guessedCardIndex = nextCardIndex;\n    this.playAudio(correctAudioUrl);\n    this.addRatingPoint(true);\n    this.disableCard(index);\n    this.changeCardStatisticsProperty(index, STATISTICS_DATA.rightGuessed);\n\n    if (this.guessedCardIndex === cardsArray.length) {\n      this.endGame();\n    } else {\n      setTimeout(() => {\n        this.playAudio(this.gameAudioList[this.guessedCardIndex]);\n      }, 1000);\n    }\n  }\n\n  handleErrorChoise = (): void => {\n    const { cardsArray } = this.state;\n    this.playAudio(errorAudioUrl);\n    this.addRatingPoint(false);\n    const currentAudioSrc = this.gameAudioList[this.guessedCardIndex];\n    const currentCard = cardsArray.find((card: CardInterface) => card.audioSrc === currentAudioSrc);\n    const currentCardIndex = currentCard && cardsArray.indexOf(currentCard);\n    if (currentCardIndex) {\n      this.changeCardStatisticsProperty(currentCardIndex, STATISTICS_DATA.errors);\n    }\n  }\n\n  addRatingPoint = (status: boolean): void => {\n    const { rating } = this.state;\n    const newRating = rating;\n    newRating.push(status);\n    this.setState({ rating: newRating });\n  }\n\n  disableCard = (index: number): void => {\n    const { isDisabledCards } = this.state;\n    const newIsDisabledCards = isDisabledCards;\n    newIsDisabledCards[index] = true;\n    this.setState({ isDisabledCards: newIsDisabledCards });\n  }\n\n  changeCardStatisticsProperty = (index: number, property: string): void => {\n    const { category, statistics, onChangeStatisticsData } = this.props;\n    const newStatictics = statistics;\n    const card = newStatictics[category][index];\n    if (property === STATISTICS_DATA.rightGuessed) {\n      card.rightGuessed += 1;\n    } else if (property === STATISTICS_DATA.errors) {\n      card.errors += 1;\n    } else {\n      card.trainings += 1;\n    }\n    onChangeStatisticsData(newStatictics);\n  }\n\n  returnRepeatBtn = (): JSX.Element => {\n    const { gameMode } = this.props;\n    return (\n      <button\n        className={\n          `cards-page__repeat-btn \n        ${gameMode === APP_MODE.play ? '' : 'train-mode'}`\n        }\n        onClick={this.repeatCardAudio}\n        type=\"button\"\n      >\n        <RepeatSVG />\n      </button>\n    );\n  }\n\n  returnStartGameBtn = (): JSX.Element => {\n    const { gameMode } = this.props;\n    return (\n      <button\n        className={\n          `cards-page__start-game-btn \n        ${gameMode === APP_MODE.play ? '' : 'train-mode'}`\n        }\n        onClick={this.startGame}\n        type=\"button\"\n      >\n        Start game\n      </button>\n    );\n  }\n\n  returnRatingBar = (): JSX.Element => {\n    const { gameMode } = this.props;\n    const { rating, gameStatus } = this.state;\n    return (\n      <div className={\n        `cards-page__rating\n        ${gameMode === APP_MODE.play ? '' : 'train-mode'}\n        ${gameStatus === GAME_STATUS.finished ? 'end-game' : ''}`\n      }\n      >\n        {rating.map((ratingPoint: boolean) => (\n          <div\n            style={{ backgroundImage: `url(${ratingPoint ? goldStarIconUrl : emptyStarIconUrl})` }}\n            className=\"cards-page__rating-star\"\n          />\n        ))}\n      </div>\n    );\n  }\n\n  render(): JSX.Element {\n    const { cardsArray, gameStatus, rating } = this.state;\n    return (\n      <>\n        {this.returnRatingBar()}\n        {gameStatus === GAME_STATUS.running ? this.returnRepeatBtn() : this.returnStartGameBtn()}\n        <ul className={\n          `cards-page__container cards-page-container \n          ${gameStatus === GAME_STATUS.finished ? 'hidden' : ''}`\n        }\n        >\n          {this.createCards(cardsArray)}\n        </ul>\n        <div className={\n          `cards-page__end-pop-up \n          ${gameStatus === GAME_STATUS.finished ? '' : 'hidden'}`\n        }\n        >\n          <img\n            className=\"cards-page__pop-up-img\"\n            src={`${rating.includes(false) ? failureImageUrl : successImageUrl}`}\n            alt=\"\"\n          />\n          <div className=\"cards-page__pop-up-text\">\n            {`${rating.filter((e) => e === false).length} errors!`}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default CardsPage;\n","import React, { Component } from 'react';\nimport './MainPage.css';\n\ninterface CategoryInterface {\n  name: string;\n  image: string;\n}\n\ninterface MainPageState {\n  cardsArray: CategoryInterface[];\n}\n\ninterface MainPageProps {\n  /* eslint-disable no-unused-vars */\n  onClickCategoryCard: (route: string) => void;\n  /* eslint-enable no-unused-vars */\n}\n\nclass MainPage extends Component<MainPageProps, MainPageState> {\n  constructor(props: MainPageProps) {\n    super(props);\n    this.state = {\n      cardsArray: [],\n    };\n  }\n\n  componentDidMount(): void {\n    this.getCategoriesInfo();\n  }\n\n  getCategoriesInfo = async (): Promise<void> => {\n    const response = await fetch('./cards.json');\n    const cards = await response.json();\n    const cardsArray = await cards[0].categories;\n    this.setState({ cardsArray });\n  }\n\n  createCards = (cardsArray: CategoryInterface[]): JSX.Element[] => {\n    const { onClickCategoryCard } = this.props;\n    return (cardsArray).map((card: CategoryInterface): JSX.Element => (\n      <li\n        key={card.name}\n        className=\"main-page__card-container card-container\"\n      >\n        <div className=\"main-page__card card\">\n          <div className=\"main-page__card-front card-front\">\n            <div\n              className=\"main-page__image\"\n              style={{ backgroundImage: `url(${card.image})` }}\n            />\n            <a\n              className=\"main-page__card-link\"\n              href={`#/${card.name}`}\n              onClick={() => onClickCategoryCard(card.name)}\n            >\n              <div className=\"main-page__card-text card-text\">{card.name}</div>\n            </a>\n          </div>\n        </div>\n      </li>\n    ));\n  };\n\n  render(): JSX.Element {\n    const { cardsArray } = this.state;\n    return (\n      <ul className=\"main-page__container cards-page-container\">\n        {this.createCards(cardsArray)}\n      </ul>\n    );\n  }\n}\n\nexport default MainPage;\n","import React from 'react';\nimport { NAV_MENU_ROUTES } from '../../../constants/constants.ts';\nimport './NavMenu.css';\n\ninterface NavMenuProps {\n  /* eslint-disable no-unused-vars */\n  onClickNavItem: (route: string) => void;\n  /* eslint-enable no-unused-vars */\n  onClickPageCover: () => void;\n  activeRout: string;\n  isHiddenNavMenu: boolean;\n}\n\nconst NavMenu: React.FC<NavMenuProps> = (props: NavMenuProps) => {\n  const { activeRout, isHiddenNavMenu } = props;\n  const navItems = NAV_MENU_ROUTES.map((route: string) => (\n    <li\n      className={`sidebar__nav-item ${route === activeRout ? 'active' : ''}`}\n      key={route}\n    >\n      <a\n        onClick={() => { props.onClickNavItem(route); }}\n        href={`#/${route}`}\n      >\n        {route}\n      </a>\n    </li>\n  ));\n  return (\n    <>\n      <div\n        className={`page-cover ${isHiddenNavMenu ? 'hidden' : ''}`}\n        onClick={() => { props.onClickPageCover(); }}\n        role=\"none\"\n      />\n      <ul className={`sidebar__nav-menu ${isHiddenNavMenu ? 'hidden' : ''}`}>\n        {navItems}\n      </ul>\n    </>\n  );\n};\n\nexport default NavMenu;\n","import React from 'react';\n\n// TODO: remove unnecessary component\ninterface ButtonProps {\n  onClick(): void;\n  className: string;\n  children: HTMLElement | null;\n}\n\nconst Button: React.FC<ButtonProps> = (props: ButtonProps) => {\n  const { className, children = '' } = props;\n  return (\n    <button\n      className={className}\n      type=\"button\"\n      onClick={() => { props.onClick(); }}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport './Statistics.css';\n\n// ! Dubbled interface from App, can't add interface to constants, (expansion problem)\ninterface CardStatisticsInterface {\n  category: string;\n  word: string;\n  translation: string;\n  trainings: number;\n  errors: number;\n  rightGuessed: number;\n  percentGuessed: number;\n}\n\ninterface StatisticsPageProps {\n  statistics: { [key: string]: CardStatisticsInterface[] };\n}\n\nconst StatisticsPage: React.FC<StatisticsPageProps> = (props: StatisticsPageProps) => {\n  const { statistics } = props;\n\n  const getCardGuessedPercent = (category: string, index: number): number => {\n    const card = statistics[category][index];\n    return Math.round((card.rightGuessed * 100) / (card.errors + card.rightGuessed)) || 0;\n  };\n\n  // TODO: replace {indexCategory * 8 + indexItem + 1} hardCode with more flexible expression\n  const getCardStatistics = () => {\n    const statisticsView = Object.entries(statistics).map(([key, value], indexCategory) => ([\n      value.map((card, indexItem) => ([\n        <tr>\n          <td>{indexCategory * 8 + indexItem + 1}</td>\n          <td>{key}</td>\n          <td>{card.word}</td>\n          <td>{card.translation}</td>\n          <td>{card.trainings}</td>\n          <td>{card.errors}</td>\n          <td>{card.rightGuessed}</td>\n          <td>{getCardGuessedPercent(key, indexItem)}</td>\n        </tr>,\n      ])),\n    ])).flat();\n    return statisticsView;\n  };\n\n  return (\n    <div className=\"statistics-page\">\n      <h1\n        className=\"statistics\"\n        style={{ margin: '80px 0 20px' }}\n      >\n        Statistics\n      </h1>\n      <table className=\"winners__table\">\n        <tr className=\"winners__table-header\">\n          <th>№</th>\n          <th>Category</th>\n          <th>Word</th>\n          <th>Translation</th>\n          <th>Trained (n)</th>\n          <th>Errors (n)</th>\n          <th>Correct (n)</th>\n          <th>Correct (%)</th>\n        </tr>\n        {getCardStatistics()}\n      </table>\n    </div>\n  );\n};\n\nexport default StatisticsPage;\n","import React from 'react';\nimport './Switcher.css';\n\ninterface SwitcherProps {\n  onClick(): void;\n}\n\nconst Switcher: React.FC<SwitcherProps> = (props: SwitcherProps) => (\n  <div className=\"switcher-container\">\n    <label className=\"switcher-label\" htmlFor=\"game-mode\">\n      <input className=\"switcher-input\" id=\"game-mode\" type=\"checkbox\" onClick={() => { props.onClick(); }} />\n      <span className=\"switcher-text\" data-on=\"play\" data-off=\"train\" />\n    </label>\n  </div>\n);\n\nexport default Switcher;\n","import React, { Component } from 'react';\nimport { ROUT_INDEX, NAV_MENU_ROUTES, APP_MODE } from '../constants/constants.ts';\nimport './App.css';\nimport CardsPage from './components/CardsPage/CardsPage.tsx';\nimport MainPage from './components/MainPage/MainPage.tsx';\nimport NavMenu from './components/NavMenu/NavMenu.tsx';\nimport Button from './components/Shared/Button/Button.tsx';\nimport StatisticsPage from './components/Statistics/Statistics.tsx';\nimport Switcher from './components/Switcher/Switcher.tsx';\n\n// TODO: fix problem with expansion, remove exp (expansion problem)\n// ! Dubbled interface from CardsPage, can't add interface to constants, can't use links navigation\n\ninterface CardInterface {\n  word: string;\n  translation: string;\n  image: string;\n  audioSrc: string;\n}\n\ninterface CardStatisticsInterface {\n  category: string;\n  word: string;\n  translation: string;\n  trainings: number;\n  errors: number;\n  rightGuessed: number;\n  percentGuessed: number;\n}\n\nconst DEFAULT_STATISTICS: CardStatisticsInterface[] = [{\n  category: 'unknown',\n  word: 'unknown',\n  translation: 'unknown',\n  trainings: 0,\n  errors: 0,\n  rightGuessed: 0,\n  percentGuessed: 0,\n}];\n\ninterface AppState {\n  isHiddenNavMenu: boolean;\n  gameMode: string;\n  activeRoute: string;\n  statistics: { [key: string]: CardStatisticsInterface[] };\n}\n\ntype EmptyProps = Record<string, never>\n\nclass App extends Component<EmptyProps, AppState> {\n  constructor(props: EmptyProps) {\n    super(props);\n    this.state = {\n      isHiddenNavMenu: true,\n      gameMode: APP_MODE.train,\n      activeRoute: NAV_MENU_ROUTES[ROUT_INDEX.mainPage],\n      statistics: { default: DEFAULT_STATISTICS },\n    };\n  }\n\n  componentDidMount(): void {\n    this.getCardsData();\n  }\n\n  getCardsData = async (): Promise<void> => {\n    const response = await fetch('./cards.json');\n    const cards = await response.json();\n    const cardsArray: { [key: string]: CardInterface[] } = await cards[1];\n\n    const defaultStatistics = Object.fromEntries(\n      Object.entries(cardsArray).map(([key, value]) => ([\n        key,\n        value.map((card) => ({\n          category: key,\n          word: card.word,\n          translation: card.translation,\n          trainings: 0,\n          errors: 0,\n          rightGuessed: 0,\n          percentGuessed: 0,\n        })),\n      ])),\n    );\n    this.setState({ statistics: defaultStatistics });\n  }\n\n  toggleNavMenu = (): void => {\n    const { isHiddenNavMenu } = this.state;\n    if (isHiddenNavMenu) {\n      this.setState({ isHiddenNavMenu: false });\n    } else {\n      this.setState({ isHiddenNavMenu: true });\n    }\n  };\n\n  setActiveRoute = (route: string): void => {\n    this.setState({ activeRoute: route });\n  };\n\n  changeAppMode = (): void => {\n    const { gameMode } = this.state;\n    if (gameMode === APP_MODE.train) {\n      this.setState({ gameMode: APP_MODE.play });\n    } else {\n      this.setState({ gameMode: APP_MODE.train });\n    }\n  }\n\n  updateStatistics = (newStatistics: { [key: string]: CardStatisticsInterface[] }): void => {\n    this.setState({ statistics: newStatistics });\n  }\n\n  // TODO: add react router instead this\n  getPage = (): JSX.Element => {\n    const { activeRoute, gameMode, statistics } = this.state;\n    if (activeRoute === NAV_MENU_ROUTES[ROUT_INDEX.mainPage]) {\n      return (\n        <MainPage\n          onClickCategoryCard={(route: string) => this.setActiveRoute(route)}\n        />\n      );\n    } if (activeRoute === NAV_MENU_ROUTES[ROUT_INDEX.statistics]) {\n      return <StatisticsPage statistics={statistics} />;\n    }\n    return (\n      <CardsPage\n        category={`${activeRoute}`}\n        gameMode={`${gameMode}`}\n        onFinishGame={() => this.setActiveRoute(NAV_MENU_ROUTES[ROUT_INDEX.mainPage])}\n        statistics={statistics}\n        onChangeStatisticsData={\n          (newStatistics: { [key: string]: CardStatisticsInterface[] }) => this.updateStatistics(newStatistics)\n        }\n      />\n    );\n  }\n\n  render(): JSX.Element {\n    const { isHiddenNavMenu, activeRoute } = this.state;\n    return (\n      <>\n        <header className=\"header\">\n          <div className=\"header__container\">\n            <Button\n              className={`burger-btn ${isHiddenNavMenu ? '' : 'active'}`}\n              onClick={this.toggleNavMenu}\n            >\n              <span />\n            </Button>\n            <Switcher\n              onClick={this.changeAppMode}\n            />\n          </div>\n        </header>\n        <NavMenu\n          isHiddenNavMenu={isHiddenNavMenu}\n          onClickNavItem={(route: string) => {\n            this.setActiveRoute(route);\n            this.toggleNavMenu();\n          }}\n          onClickPageCover={this.toggleNavMenu}\n          activeRout={activeRoute}\n        />\n        {this.getPage()}\n        <footer className=\"footer\">\n          <div className=\"footer-container\">\n            <a className=\"github\" href=\"https://github.com/VitaliKlm\" target=\"_blank\" rel=\"noopener noreferrer\">\n              github\n            </a>\n            <a className=\"rss\" href=\"https://rs.school/js/\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <span className=\"rss-year\">&apos;21</span>\n            </a>\n          </div>\n        </footer>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App.tsx';\nimport './styles/index.css';\n\nReactDOM.render(<App />, document.body.querySelector('.app'));\n"],"sourceRoot":""}